[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "ARG002", # unused-method-args
    "ARG003", # unused-class-method-args
    "ARG004", # unused-static-method-args
    "ARG005", # unused-lambda-args
    "D", # pydocstyle
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q", # flake8-quotes
    "PT", # flake8-pytest-style
    "RUF", # Ruff-specific rules
]

ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D107",
    "D203", "D213",
]

exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox", ".pants.d",
    ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out",
    "build", "dist", "node_modules", "venv", "alembic/versions/*.py",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "ARG001", "ARG002"]
"alembic/*" = ["D"]
"scripts/*" = ["D"]

[tool.ruff.isort]
force-single-line = true
force-sort-within-sections = true
lines-after-imports = 2

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''/(  alembic/versions)/'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "stripe", "redis", "sqlalchemy.*", "alembic.*", "openai", "anthropic",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error", "ignore::UserWarning", "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
]

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "alembic/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
